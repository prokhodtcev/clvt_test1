OrionAddress=http://190.160.0.8:8090/soap/IOrionPro
c1Address=http://172.18.110.43/hrm/ws/service.1cws



jdbc.authentication.driverClassName=org.postgresql.Driver
jdbc.authentication.url=jdbc:postgresql://localhost:5432/clvt
jdbc.authentication.username=super
jdbc.authentication.password=super

META_URL=http://test.clevertec.ru/tt/meta
DATA_TO_URL=http://test.clevertec.ru/tt/data

#>>>>>>>>>>>>>>>>>>>Запросы для переноса справочников из 1С в БД системы
#-----------Подразделения из 1С
DEP_1C=select t1.[_Code], t1.[_Description], t1.[_IDRRef]  from [_Reference91] as t1

#-----------Список сотрудников из 1С
PERS_1C=SELECT _Reference111.[_Code], RTRIM(LTRIM(_Reference111.[_Code])) as TN, RTRIM(LTRIM(UPPER(_Reference111.[_Description]))) AS Name_1C , RTRIM(LTRIM(upper(_Reference111.[_Description]))) AS FirstName_1C, RTRIM(LTRIM(upper(_Reference111.[_Description]))) AS MidName_1C, _Reference53.[_Description] AS PostName_1C, _Reference91.[_Code] AS DepCod_1C, _Reference91.[_Description] AS DepName_1C, _Reference131.[_Fld1649] AS BirthDay_1C,  _Reference111.[_Fld1459] AS QuitDay_1C, _Reference111._IDRRef AS ID_List_1C, _Reference111._Fld1431RRef AS ID_Div_1C, _Reference111._Fld1432RRef AS ID_Post_1C, '0',_Reference111.[_Fld1458] AS StartDay_1C FROM ((_Reference111 INNER JOIN _Reference131 ON _Reference111.[_Fld1422RRef] = _Reference131.[_IDRRef]) INNER JOIN _Reference53 ON _Reference111.[_Fld1432RRef] = _Reference53.[_IDRRef]) INNER JOIN _Reference91 ON _Reference111.[_Fld1431RRef] = _Reference91.[_IDRRef] where _Reference111._Marked=0
LAST_INFO_ABOUT_PERS = SELECT _Reference91.[_Code] AS DepCod_1C, _Reference91.[_Description] AS DepName_1C, _Reference53.[_Description] AS PostName_1C,_Fld7411 as Contract_Date, _Fld7406RRef as ID_Div_1C, _Fld7407RRef as ID_Post_1C,  _Fld7409 As Num_Contract_1C  FROM _InfoRg7400  INNER JOIN _Reference91 ON _Reference91._IDRRef = _Fld7406RRef INNER JOIN _Reference53 ON _Reference53._IDRRef = _Fld7407RRef where _Fld7402RRef = 0x_S_ ORDER BY _Period DESC ;
#LAST_INFO_ABOUT_PERS = SELECT _Reference91.[_Code] AS DepCod_1C, _Reference91.[_Description] AS DepName_1C, _Reference53.[_Description] AS PostName_1C,_Fld7411 as Contract_Date, _Fld7406RRef as ID_Div_1C, _Fld7407RRef as ID_Post_1C,  _Fld7409 As Num_Contract_1C  FROM _InfoRg7400  INNER JOIN _Reference91 ON _Reference91._IDRRef = _Fld7406RRef INNER JOIN _Reference53 ON _Reference53._IDRRef = _Fld7407RRef where _Fld7402RRef = 0xBB70305A3A473AA911E58C29651C4E11 ORDER BY _Period DESC ;

#>>>>>>>>>>>>>>>>>>>Запросы для переноса справочников из 1С в БД системы



#----------------------------pList
SCUD_GET_PLIST=SELECT PERSONNEL.PERS_ID, PERSONNEL.LASTNAME, PERSONNEL.FIRSTNAME, PERSONNEL.MIDLENAME, PERSONNEL.FOTO, '43', PERSONNEL.DEPARTMENT, PERSONNEL.DOLJNOST,PERSONNEL.TABELNOMER, 0 as tgroup FROM PERSONNEL WHERE DEPARTMENT <> 'ОТДЕЛ 95'
#----------------------------pPost
SCUD_GET_PPOST=SELECT "DOLJNOST", "DOLJNOST" from "PERSONNEL" GROUP BY "DOLJNOST"
#----------------------------GTime
SCUD_GET_GTIME=SELECT 0, NULL, NULL from [GTime]
#----------------------------AccessZone
SCUD_GET_ACCESSZONE=SELECT ZONE,ZONE,ZONE,ZONE,ZONE,ZONE  from ZONES
#----------------------------AccessPoint
SCUD_GET_ACESSPOINT=SELECT ID_DOORS, NAMEDOOR from DOORS
#----------------------------pPDivision
SCUD_GET_PDIV=SELECT DEPARTMENT as D1, DEPARTMENT as D2, 0 FROM DEPARTMENTS order by DEPARTMENT
#----------------------------pLogDate
SQL_SELECT_FROM_PLOGDATA=SELECT t1.DTEVENT AS TimeVal, t1.PERS_ID AS HozOrgan, t1.ID_DOORS as DoorIndex,  t1.PORT AS Mode,  t1.PORT as ZoneIndex FROM _SYSLOG_ t1 WHERE SYSMESS = 'KEY' and t1.DTEVENT >= '_MAXDTIME_'

#-----------SQL LOG
departmentSQL=SELECT "PERSONNEL"."DepCod_1C", "PERSONNEL"."DepCod_1C","PERSONNEL"."DepCod_1C", "DEPARTMENTS".name_urv FROM "PERSONNEL" inner join "pList" on "TabNumber"="TN" inner join "DEPARTMENTS" ON "DepCod_1C"=cod_1c GROUP BY "PERSONNEL"."DepCod_1C", "DEPARTMENTS".name_urv ORDER BY "DEPARTMENTS".name_urv
depPersonsSQL=SELECT w."ID", pers."Name_1C", pers."FirstName_1C", pers."MidName_1C", pers."workphone", pers."homephone", pers."BirthDay_1C",  pers."HAdres_1C",  w."Company", pers."PostName_1C", w."TabNumber", w."EmailList", w."Section", d."Name" as dep, c."Name" as comp, pers."QuitDay_1C" as qd,  pers."startday" as sd , pers."MobPhone_1C" as mf, pers.adrinform, pers."DepCod_1C", pers.email, pers.ev_mail, pers.copy_mail    FROM "pList" w LEFT JOIN "PCompany" c ON w."Company" = c."ID" LEFT JOIN "PDivision" d ON w."Section" = d."ID" LEFT JOIN "PPost" p ON w."Post" = p."ID" inner join "PERSONNEL" pers ON pers."TN" = w."TabNumber" where ("Company" = '43' or "Company" = '72') and pers."QuitDay_1C" >  '_NOW_' and pers."DepCod_1C" =
SQL_allAccessPoints=SELECT id, name_urv FROM acesspoint where name_urv NOTNULL

#---------------SQL для 1С
SQL_CAL_C1C_STRING=SELECT T4.[_Code] As DEP, T3.[_Code] AS TN, T2.[_Fld5382] AS Month, T1.[_Fld5512], T1.[_Fld5513], T1.[_Fld5514], T1.[_Fld5515], T1.[_Fld5516], T1.[_Fld5517], T1.[_Fld5518], T1.[_Fld5519], T1.[_Fld5520], T1.[_Fld5521], T1.[_Fld5522], T1.[_Fld5523], T1.[_Fld5524], T1.[_Fld5525], T1.[_Fld5526], T1.[_Fld5527], T1.[_Fld5528], T1.[_Fld5529], T1.[_Fld5530], T1.[_Fld5531], T1.[_Fld5532], T1.[_Fld5533], T1.[_Fld5534], T1.[_Fld5535], T1.[_Fld5536], T1.[_Fld5537], T1.[_Fld5538], T1.[_Fld5539], T1.[_Fld5540], T1.[_Fld5541], T1.[_Fld5542], T1.[_Fld5388RRef], T1.[_Fld5389RRef], T1.[_Fld5390RRef], T1.[_Fld5391RRef], T1.[_Fld5392RRef], T1.[_Fld5393RRef], T1.[_Fld5394RRef], T1.[_Fld5395RRef], T1.[_Fld5396RRef], T1.[_Fld5397RRef], T1.[_Fld5398RRef], T1.[_Fld5399RRef], T1.[_Fld5400RRef], T1.[_Fld5401RRef], T1.[_Fld5402RRef], T1.[_Fld5403RRef], T1.[_Fld5404RRef], T1.[_Fld5405RRef], T1.[_Fld5406RRef], T1.[_Fld5407RRef], T1.[_Fld5408RRef], T1.[_Fld5409RRef], T1.[_Fld5410RRef], T1.[_Fld5411RRef], T1.[_Fld5412RRef], T1.[_Fld5413RRef], T1.[_Fld5414RRef], T1.[_Fld5415RRef], T1.[_Fld5416RRef], T1.[_Fld5417RRef], T1.[_Fld5418RRef] FROM (([dbo].[_Document233_VT5384] As T1 INNER JOIN [dbo].[_Document233] AS T2 ON T1.[_Document233_IDRRef] = T2.[_IDRRef]) INNER JOIN [dbo].[_Reference111] AS T3 ON T1.[_Fld5386RRef] = T3.[_IDRRef]) INNER JOIN [dbo].[_Reference91] AS T4 ON T3.[_Fld1431RRef] = T4.[_IDRRef] WHERE (((T2.[_Fld5378]) Like 'urvRF%')) ORDER BY  Month, TN

#---------Базовый запрос для отчета по БД Орион

SQL_ORION_BASE=SELECT "PDivision"."ID" AS DepID, "pList"."ID" AS pListID, "pLogData"."TimeVal", "PDivision"."GroupID" AS GTimeID, "PDivision"."GroupID" AS GTimeID1, "pList"."TabNumber", "pLogData"."ZoneIndex" AS GIndex, "pList"."Company" as Comp FROM "pLogData" LEFT JOIN ("pList" LEFT JOIN "PDivision" on "pList"."Section" = "PDivision"."ID") ON "pLogData"."HozOrgan" = "pList"."ID" WHERE     ("pList"."TabNumber" IS NOT NULL) AND ("pList"."ID" IS NOT NULL) AND ("pLogData"."TimeVal" >= '_SD_') AND ("pLogData"."TimeVal" < '_ED_') AND ("pList"."Company" = '43') ORDER BY DepID, pListID, "pLogData"."TimeVal"

#-----------Обновление записи в результирующей таблице для отчетов
SQL_UPDATE_EXIST_RECORD=UPDATE public."Real_Graph" AS T1 SET "WorkTimeNotDinner" = '_WorkTimeNotDinner_', "TimeVhod" = '_TimeVhod_', "TimeVihod" = '_TimeVihod_', "IDDivision" = '_IDDivision_', "IDSotrudnik" = _IDSotrudnik_, "Otluchka" = _Otluchka_, "WorkTime" = '_WorkTime_', "DeltaStartWork" = _DeltaStartWork_, "DeltaStopWork" = _DeltaStopWork_, "StartWork" ='_StartWork_', "StopWork" = '_StopWork_', "StartDinner" = '_StartDinner_', "StopDinner" = '_StopDinner_', "WorkGrID" = _WorkGrID_, "NotWorkTime" = _NotWorkTime_, "IDComp" = _IDComp_, "DeltaStartDinner" = _DeltaStartDinner_, "DeltaStopDinner" = _DeltaStopDinner_, night_work=_Night_Work_ WHERE ("TN"='_TN_') AND ("DataDay"='_DataDay_')


#-----------------Для отчета по сотруднику за период. Полная информация.
PERS_DEP_ITOG=SELECT cd, sum(wminutplan) as wp, sum(work_time_fact)/60 as wt, sum(not_work_time_fact)/60 as not_work_time_fact, sum(delta_start)/60 as delta_start, sum(delta_end)/60 as delta_end,  sum(delta_start_din)/60 delta_start_din, sum(delta_stop_din)/60 as delta_stop_din   from(SELECT t1."CodDep" as cd, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."QuitDay_1C" as qd, "PERSONNEL"."PostName_1C" as post, Extract(MONTH from t1."Date") AS Mes, t1."Date", t2."name", t3."TimeVhod"::TIME as start_work_fact, t3."TimeVihod"::TIME as stop_work_fact, "Clock"*60 AS wminutplan, t3."WorkTimeNotDinner" as work_time_fact, t3."NotWorkTime" as not_work_time_fact, t3."StartWork"::TIME as start_work_plan, t3."DeltaStartWork" as delta_start, t3."StopWork"::TIME as stop_work_plan, t3."DeltaStopWork" as delta_end, t3."StartDinner"::TIME as start_din_plan, t3."DeltaStartDinner" as delta_start_din, t3."StopDinner"::TIME as stop_din_plan, t3."DeltaStopDinner" as delta_stop_din, t3."WorkGrID" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (t1."CodDep" = '_DEP_' AND t1."Date">='_SD_' AND t1."Date"<='_ED_')) as RR WHERE qd= '3000-01-01'  GROUP BY cd
PERS_DEP=SELECT cd,tn,fio,post, qd, sum(wminutplan) as wp, sum(work_time_fact)/60 as wt, sum(not_work_time_fact)/60 as not_work_time_fact, sum(delta_start)/60 as delta_start, sum(delta_end)/60 as delta_end,  sum(delta_start_din)/60 delta_start_din, sum(delta_stop_din)/60 as delta_stop_din   from(SELECT t1."CodDep" as cd, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."QuitDay_1C" as qd, "PERSONNEL"."PostName_1C" as post, Extract(MONTH from t1."Date") AS Mes, t1."Date", t2."name", t3."TimeVhod"::TIME as start_work_fact, t3."TimeVihod"::TIME as stop_work_fact, "Clock"*60 AS wminutplan, t3."WorkTimeNotDinner" as work_time_fact, t3."NotWorkTime" as not_work_time_fact, t3."StartWork"::TIME as start_work_plan, t3."DeltaStartWork" as delta_start, t3."StopWork"::TIME as stop_work_plan, t3."DeltaStopWork" as delta_end, t3."StartDinner"::TIME as start_din_plan, t3."DeltaStartDinner" as delta_start_din, t3."StopDinner"::TIME as stop_din_plan, t3."DeltaStopDinner" as delta_stop_din, t3."WorkGrID" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (t1."CodDep" = '_DEP_' AND t1."Date">='_SD_' AND t1."Date"<='_ED_')) as RR WHERE qd= '3000-01-01'  GROUP BY (cd,tn,fio, post,qd) ORDER BY (sum(COALESCE(work_time_fact,0))-sum(COALESCE(wminutplan,0)))
SQL_REP_ALL_FOR_SOTR=SELECT comment, rep_hm, "GTime".name as grname, t1."CodDep", t1."TN", "PERSONNEL"."DepName_1C" as depname , "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, Extract(MONTH from t1."Date") AS Mes, t1."Date", t2."name", t3."TimeVhod"::TIME as start_work_fact, t3."TimeVihod"::TIME as stop_work_fact, "Clock"*60 AS wminutplan, t3."WorkTimeNotDinner"/60 as work_time_fact, t3."WorkTime"/60 as WT_ND_fact,  t3."NotWorkTime"/60 as not_work_time_fact, t3."StartWork"::TIME as start_work_plan, t3."DeltaStartWork"/60 as delta_start, t3."StopWork"::TIME as stop_work_plan, t3."DeltaStopWork"/60 as delta_end, t3."StartDinner"::TIME as start_din_plan, t3."DeltaStartDinner"/60 as delta_start_din, t3."StopDinner"::TIME as stop_din_plan, t3."DeltaStopDinner"/60 as delta_stop_din, t3."WorkGrID" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" LEFT JOIN "GTime" on t3."WorkGrID" = "GTime".id WHERE (((t1."TN")='_TN_')) AND t1."Date">='_SD_' AND t1."Date"<='_ED_'  ORDER BY "PERSONNEL"."Name_1C", t1."Date"
SQL_REP_ALL_FOR_SOTR_GROUP=SELECT cd, depnam, tn,fio, sum(wminutplan) as wp, sum(work_time_fact)/60 as wt, sum(not_work_time_fact)/60 as not_work_time_fact, sum(delta_start)/60 as delta_start, sum(delta_end)/60 as delta_end,  sum(delta_start_din)/60 delta_start_din, sum(delta_stop_din)/60 as delta_stop_din   from(SELECT t1."CodDep" as cd, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."DepName_1C" as depnam, Extract(MONTH from t1."Date") AS Mes, t1."Date", t2."name", t3."TimeVhod"::TIME as start_work_fact, t3."TimeVihod"::TIME as stop_work_fact, "Clock"*60 AS wminutplan, t3."WorkTimeNotDinner" as work_time_fact, t3."NotWorkTime" as not_work_time_fact, t3."StartWork"::TIME as start_work_plan, t3."DeltaStartWork" as delta_start, t3."StopWork"::TIME as stop_work_plan, t3."DeltaStopWork" as delta_end, t3."StartDinner"::TIME as start_din_plan, t3."DeltaStartDinner" as delta_start_din, t3."StopDinner"::TIME as stop_din_plan, t3."DeltaStopDinner" as delta_stop_din, t3."WorkGrID" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (((t1."TN")='_TN_')) AND t1."Date">='_SD_' AND t1."Date"<='_ED_' ORDER BY "PERSONNEL"."Name_1C", t1."Date") as RR GROUP BY (cd, depnam, tn,fio)
SQL_REP_ALL_FOR_SOTR_GROUP_MES=SELECT mes, yyyy, mm, sum(wminutplan) as wp, sum(work_time_fact)/60 as wt, sum(not_work_time_fact)/60 as not_work_time_fact, sum(delta_start)/60 as delta_start, sum(delta_end)/60 as delta_end,  sum(delta_start_din)/60 delta_start_din, sum(delta_stop_din)/60 as delta_stop_din   from(SELECT t1."CodDep" as cd, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, to_char(t1."Date",'mm.YYYY') AS mes, extract(MONTH FROM t1."Date") as mm, extract(YEAR FROM t1."Date") as yyyy, t1."Date", t2."name", t3."TimeVhod"::TIME as start_work_fact, t3."TimeVihod"::TIME as stop_work_fact, "Clock"*60 AS wminutplan, t3."WorkTimeNotDinner" as work_time_fact, t3."NotWorkTime" as not_work_time_fact, t3."StartWork"::TIME as start_work_plan, t3."DeltaStartWork" as delta_start, t3."StopWork"::TIME as stop_work_plan, t3."DeltaStopWork" as delta_end, t3."StartDinner"::TIME as start_din_plan, t3."DeltaStartDinner" as delta_start_din, t3."StopDinner"::TIME as stop_din_plan, t3."DeltaStopDinner" as delta_stop_din, t3."WorkGrID" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (((t1."TN")='_TN_')) AND t1."Date">='_SD_' AND t1."Date"<='_ED_' ORDER BY "PERSONNEL"."Name_1C", t1."Date") as RR GROUP BY (mes,yyyy,mm) ORDER BY  yyyy, mm

1C_offset=0
project=kbsp
zone0=2
zone=2,1
nameProject=\u041e\u0410\u041e \u041a\u0411\u0421\u041f
#working=1753-01-01
#working=3000-01-01

#                                                                                            ********
#                                                                                               *
#************************************************************************KBSP********************



#>>>>>>>>>>>>>>>>>>>Запросы для переноса справочников из 1С в БД системы

#-----------Подразделения из 1С

UPD_DEPARTMENTS=UPDATE public."DEPARTMENTS" set cod_1c='_Code', name_1c='_Description' where id_1c = '_IDRRef'
INS_DEPARTMENTS=INSERT INTO public."DEPARTMENTS" (cod_1c, name_1c, id_1c) values ('_Code', '_Description',  '_IDRRef')

INS_DEP_XLS INSERT INTO "DEPARTMENTS" (cod_1c, name_1c, id_1c) values ('_DEPC_', '_DEP_','_ID_')
UPD_DEP_XLS UPDATE "DEPARTMENTS" set cod_1c='_DEPC_', name_1c='_DEP_'  where id_1c='_ID_'

#-----------Список сотрудников из 1С

UPD_IDSCUD_IN_PERSONNEL = UPDATE "PERSONNEL" set idscud = "pList"."ID" from "pList"  WHERE "PERSONNEL"."TN"="pList"."TabNumber"

IF_UPD_PERS=select if_upd from "PERSONNEL" where "ID_List_1C"=?
UPD_PERSONNEL=UPDATE public."PERSONNEL" set "_Code"=?, "TN"=?, "Name_1C"=?, "FirstName_1C"=?, "MidName_1C"=?, "PostName_1C"=?, "DepCod_1C"=?, "DepName_1C"=?, "BirthDay_1C"=?, "QuitDay_1C"=?, "startday"=?,    "ID_Div_1C"=?, "ID_Post_1C"=?, contract=?, contract_date=?   where "ID_List_1C"=?
INS_PERSONNEL_XLS INSERT INTO "PERSONNEL" (\
"Name_1C",\
"FirstName_1C",\
"MidName_1C",\
"ID_Div_1C",\
"ID_Post_1C", \
"BirthDay_1C", \
"pol", \
"inn", \
"snils", \
"gr", \
"dl", \
"se", \
"sn", \
"org", \
"ddoc", \
"MobPhone_1C", \
"email", \
"homephone", \
"workphone", \
"adrpropis", \
"adrlife", \
"adrinform", \
"ed", \
"fr", \
"di", \
"QuitDay_1C",\
"PostName_1C", \
"DepName_1C", \
"DepCod_1C", \
"ID_List_1C", \
"TN", \
"_Code")\
  VALUES ( \
'_NAM_', \
'_FNAM_', \
'_LNAM_', \
'_DEP_', \
'_ST_', \
'_DR_', \
'_POL_', \
'_INN_', \
'_SNILS_', \
'_GR_', \
'_DL_', \
'_SE_', \
'_SN_', \
'_ORG_', \
'_DDOC_', \
'_FM_', \
'_EM_', \
'_FD_', \
'_FW_', \
'_ADR1_', \
'_ADR2_', \
'_ADR3_', \
'_ED_', \
'_FR_', \
'_DI_', \
'_DQ_',\
'_STN_', \
'_DEPN_', \
'_DEPC_', \
'_ID_', \
'_TN_', \
'_TND_')

UPD_PERSONNEL_XLS UPDATE public."PERSONNEL" set \
"Name_1C"='_NAM_', \
"FirstName_1C"='_FNAM_', \
"MidName_1C"='_LNAM_', \
"ID_Div_1C"='_DEP_', \
"ID_Post_1C"='_ST_', \
"BirthDay_1C"='_DR_', \
"pol"='_POL_', \
"inn"='_INN_', \
"snils"='_SNILS_', \
"gr"='_GR_', \
"dl"='_DL_', \
"se"='_SE_', \
"sn"='_SN_', \
"org"='_ORG_', \
"ddoc"='_DDOC_', \
"MobPhone_1C"='_FM_', \
"email"='_EM_', \
"homephone"='_FD_', \
"workphone"='_FW_', \
"adrpropis"='_ADR1_', \
"adrlife"='_ADR2_', \
"adrinform"='_ADR3_', \
"ed"='_ED_', \
"fr"='_FR_', \
"di"='_DI_', \
"QuitDay_1C"='_DQ_', \
"PostName_1C"='_STN_', \
"DepName_1C"='_DEPN_', \
"DepCod_1C"='_DEPC_', \
"ID_List_1C"='_ID_', \
"TN"='_TN_', \
"contract_date"='_DZK_' \
 where "_Code"='_TND_'


#-----------Добавить новую запись в таблицу сотрудников БД системы
INS_PERSONNEL=INSERT INTO public."PERSONNEL" ("_Code", "TN", "Name_1C", "FirstName_1C", "MidName_1C", "PostName_1C", "DepCod_1C","DepName_1C", "BirthDay_1C", "QuitDay_1C", startday,  "ID_List_1C", "ID_Div_1C", "ID_Post_1C",contract, contract_date ) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 

#-----------Получить код сотрудника, код подразделения из СКУД по табельному номеру сотрудника
GET_IDPERS_IDDEP_SCUD=SELECT "ID","Section" FROM "pList" where "TabNumber" = '_TN_' and ("Company"='43' or "Company"='72')
GET_IDPERS_IDDEP_SCUD_XML=SELECT "ID","Section" FROM "pList" where "TabNumber" = '_TN_' and ("Company"='43' or "Company"='72')

#-----------------ФИО с заглавной буквы, остальные строчные
FORMAT_FIO=UPDATE "PERSONNEL" SET "FirstName_1C"=initcap("FirstName_1C"), "MidName_1C"=initcap("MidName_1C"), "Name_1C"=initcap("Name_1C")

#----------------------------Получить базовые таблицы из СКУД

#----------------------------pList
PG_UPD_PLIST=UPDATE public."pList" set  "Name"=? , "FirstName"=?, "MidName"=?, "Picture"=?, "Company"=?, "Section"=?, "Post"=?, "TabNumber"=?, "Schedule"=?  where "ID"=? 
PG_INS_PLIST=INSERT INTO public."pList" ("ID", "Name" , "FirstName", "MidName", "Picture", "Company", "Section", "Post", "TabNumber", "Schedule" ) values (?,?,?,?,?,?,?,?,?,?)
#----------------------------pPost
PG_UPD_PPOST=UPDATE public."PPost" set "Name"=? where "ID"=? 
PG_INS_PPOST=INSERT INTO public."PPost" ("ID", "Name") values (?,?)
#----------------------------GTime
PG_UPD_GTIME=UPDATE "GTime" set name=? , calendar= ? where id = ? 
PG_INS_GTIME=INSERT INTO "GTime" (id, name, calendar) values (?,?,?)

#----------------------------TimeCont
SCUD_GET_TIMECOUNT=SELECT * from [TimeCont]
PG_UPD_TIMECOUNT=UPDATE "timecont" set timeid=? , num= ?, start=?, finish=?, days=? where id = ? 
PG_INS_TIMECOUNT=INSERT INTO "timecont" (id, timeid, num, start, finish, days) values (?,?,?,?,?,?)

#----------------------------PCompany
SCUD_GET_PCOMPANY=SELECT [ID],[Name] from [PCompany]
PG_UPD_PCOMPANY=UPDATE "PCompany" set "Name"=? where "ID" = ? 
PG_INS_PCOMPANY=INSERT INTO "PCompany" ("ID", "Name") values (?,?)

#----------------------------grAccess
SCUD_GET_GRACCESS=SELECT [ID], [GroupID], [TimeZone], [AccessID] from [grAccess]
PG_UPD_GRACCESS=UPDATE "grAccess" set "GroupID"=? , "TimeZone"= ?, "AccessID" = ? where "ID" = ? 
PG_INS_GRACCESS=INSERT INTO "grAccess" ("ID", "GroupID", "TimeZone", "AccessID") values (?,?,?,?)

#----------------------------AccessZone

PG_UPD_ACCESSZONE=UPDATE "accesszone" set "name"=? , "comment"= ?, "gindex" = ? , "config" = ?, "status" = ?  where "id" = ? 
PG_INS_ACCESSZONE=INSERT INTO "accesszone" ("id", "name", "comment", "gindex", config, status) values (?,?,?,?,?,?)

#----------------------------AccessPoint
PG_UPD_ACESSPOINT=UPDATE "acesspoint" set "name"=?  where "id" = ? 
PG_INS_ACESSPOINT=INSERT INTO "acesspoint" ("id", "name") values (?,?)

#----------------------------pPDivision
PG_UPD_PDIV=UPDATE public."PDivision" set  "Name"=? , "GroupID" = ? where "ID"=? 
PG_INS_PDIV=INSERT INTO public."PDivision" ("ID", "Name", "GroupID") values (?,?,?)

#----------------------------pLogDate
SQL_INSERT_PLOGDATA=INSERT INTO "pLogData" ("TimeVal", "HozOrgan", "DoorIndex", "Mode", "ZoneIndex") VALUES (?, ?, ?, ?, ?);

#-----------SQL LOG
allPersonsSQL=SELECT w."ID", pers."Name_1C", pers."FirstName_1C", pers."MidName_1C", pers."workphone", w."HomePhone", pers."BirthDay_1C",  pers."HAdres_1C",  w."Company", pers."PostName_1C", w."TabNumber", w."EmailList", w."Section", d."Name" as dep, c."Name" as comp, pers."QuitDay_1C" as qd,  pers."di" as sd , pers."MobPhone_1C"  as mf, pers.adrinform, pers."DepCod_1C", pers.email, pers.ev_mail, pers.copy_mail   FROM "pList" w LEFT JOIN "PCompany" c ON w."Company" = c."ID" LEFT JOIN "PDivision" d ON w."Section" = d."ID" LEFT JOIN "PPost" p ON w."Post" = p."ID" inner join "PERSONNEL" as pers ON pers."TN" = w."TabNumber" where ("Company" = '43' or "Company" = '72') and pers."QuitDay_1C" >  '_NOW_'
PersonsByIdSQL=SELECT w."ID", pers."Name_1C", pers."FirstName_1C", pers."MidName_1C", pers."workphone", w."HomePhone", pers."BirthDay_1C",  pers."HAdres_1C",  w."Company", pers."PostName_1C", w."TabNumber", w."EmailList", w."Section", d."Name" as dep, c."Name" as comp , pers."QuitDay_1C" as qd,  pers."di" as sd , pers."MobPhone_1C" as mf, pers.adrinform, pers."DepCod_1C" , pers.email, pers.ev_mail, pers.copy_mail   FROM "pList" w LEFT JOIN "PCompany" c ON w."Company" = c."ID" LEFT JOIN "PDivision" d ON w."Section" = d."ID" LEFT JOIN "PPost" p ON w."Post" = p."ID" inner join "PERSONNEL" pers ON pers."TN" = w."TabNumber" where ("Company" = '43' or "Company" = '72') and w."ID"  = '_ID_' ORDER BY pers.di DESC LIMIT  1
DailyStatisticsSQL=SELECT 32,"HozOrgan", "Mode", "TimeVal", "ZoneIndex", "DoorIndex" FROM "pLogData"    LEFT JOIN ("pList" as u INNER JOIN "PERSONNEL" on "TN"="TabNumber")  ON "HozOrgan" = u."ID" WHERE "TimeVal"  between ? and ? AND (u."Company" = '43' or "Company" = '72')  ORDER BY "HozOrgan", "TimeVal"
DailyStatisticsByDepSQL=SELECT 32,"HozOrgan", "Mode", "TimeVal", "ZoneIndex", "DoorIndex" FROM "pLogData"    LEFT JOIN ("pList" as u INNER JOIN "PERSONNEL" on "TN"="TabNumber")  ON "HozOrgan" = u."ID" WHERE "TimeVal"  between ? and ? AND (u."Company" = '43' or "Company" = '72') AND "PERSONNEL"."DepCod_1C"= ? ORDER BY "HozOrgan", "TimeVal"
SelectNameTableSQL=select RDB$RELATION_NAME   from RDB$RELATIONS where  SUBSTRING(RDB$RELATION_NAME from 1 for 8) = 'SYSLOG20'   and CAST(SUBSTRING(RDB$RELATION_NAME from 7 for 8) as numeric) = (select  max(CAST(SUBSTRING(RDB$RELATION_NAME from 7 for 8) as numeric) ) from RDB$RELATIONS where (RDB$SYSTEM_FLAG = 0) and SUBSTRING(RDB$RELATION_NAME from 1 for 8) = 'SYSLOG20' and SUBSTRING(RDB$RELATION_NAME from 7 for 8) <= ? )
DailyStatisticsByTNSQL=SELECT "TabNumber", "Mode", "TimeVal", "ZoneIndex", "DoorIndex", accesszone.name as zone, acesspoint.name as point FROM "pLogData" LEFT JOIN "pList" u  ON "HozOrgan" = u."ID" LEFT JOIN accesszone on "ZoneIndex" = accesszone.gindex LEFT JOIN acesspoint on "DoorIndex"=acesspoint.id WHERE "TimeVal"  between '_SD_' and '_ED_' AND u."TabNumber" = '_TN_' ORDER BY "TimeVal"
SelectPhotoSQL=SELECT "Picture" FROM "pList" WHERE "ID" = 
#--------------SQL информация рабочего календаря
SQL_AllCal=SELECT "ID", "TN", "Date", "Clock", "TypDayCod", coddepscud, "CodDep", worktime, rep_hm, comment     FROM Public."c1c"  WHERE "Date" >= '_SData_' and "Date" <= '_EData_' ORDER BY "TN"
SQL_DepCal=SELECT "ID", c1c."TN", "Date", "Clock", "TypDayCod", coddepscud, "DepCod_1C", worktime, rep_hm, comment  FROM Public."c1c" INNER JOIN "PERSONNEL" ON c1c."TN" = "PERSONNEL"."TN" WHERE "DepCod_1C" = '_Dep_' and "Date" >= '_SData_' and "Date" <= '_EData_' ORDER BY c1c."TN"

#---------------SQL для 1С

SQL_ISEXIST_C1C= SELECT  handmade from c1c where idpersscud='_IDPERSSCUD_' and "Date" = '_DATE_'
SQL_UPD_C1C= UPDATE public.c1c SET idpersscud='_IDPERSSCUD_',coddepscud='_CODEPSCUD_',"CodDep"= '_DEP_',  "Clock" = _CLOCK_, "TypDayCod1C" = '_TYPDAYCOD_' WHERE "TN"='_TN_' AND "Date"='_DATE_'
SQL_INS_C1C= INSERT INTO public.c1c ("idpersscud","coddepscud","CodDep", "Clock", "TypDayCod1C","TN","Date") values ('_IDPERSSCUD_','_CODEPSCUD_','_DEP_', _CLOCK_, '_TYPDAYCOD_' ,_TN_, '_DATE_')
SQL_CAL1CBASE=select [_IDRRef], [_Fld1423], [_Description],  [_Fld1422]   from [dbo].[_Reference38]

SQL_UPD_TWORKTIME= UPDATE public.tworktime SET "id1c" = '_ID_' WHERE "cod"='_COD_'
SQL_INS_TWORKTIME= INSERT INTO public.tworktime ("id1c", "cod", "name") values ('_ID_', '_COD_',  '_NAME_')
SQL_UPD_TYPDAYWORC_IN_C1C=UPDATE public.c1c as v SET "TypDayCod" = s.cod from  public.tworktime as s where s.id1c = v."TypDayCod1C"
#SQL_UPD_TYPDAYWORC_IN_C1C_XML=UPDATE public.c1c as v SET "TypDayCod" = s.cod from  public.tworktime as s where s.id1cxml = v."TypDayCod1C" and v."TypDayCod" = '_TYPDAY_'
SQL_UPD_TYPDAYWORC_IN_C1C_XML=UPDATE public.c1c as v SET "TypDayCod" = s.cod from  public.tworktime as s where s.id1cxml = v."TypDayCod1C"
SQL_UPD_DEPCOD1C_IN_C1C_XML=UPDATE public.c1c as v SET "CodDep" = s."DepCod_1C" from  "PERSONNEL" as s where s."TN" = v."TN" and v."CodDep"='_DEP_'


#---------Базовый запрос для отчета по БД Орион

SQL_TIMECOUNT=SELECT * FROM timecont WHERE timeid = _GRAF_
SQL_TIMECOUNT_ALL=SELECT id, timeid, num, start, finish, days FROM timecont ORDER BY timeid,num

#-----------Обновление записи в результирующей таблице для отчетов
SQL_INSERT_RECORD=INSERT INTO public."Real_Graph" ("WorkTimeNotDinner","TimeVhod", "TimeVihod", "IDDivision", "IDSotrudnik" , "Otluchka" , "WorkTime" , "DeltaStartWork" , "DeltaStopWork" , "StartWork" , "StopWork" , "StartDinner" , "StopDinner" , "WorkGrID" , "NotWorkTime" , "IDComp" , "DeltaStartDinner" , "DeltaStopDinner", night_work, "TN", "DataDay") values ('_WorkTimeNotDinner_','_TimeVhod_', '_TimeVihod_', '_IDDivision_', '_IDSotrudnik_', '_Otluchka_', '_WorkTime_', '_DeltaStartWork_', '_DeltaStopWork_', '_StartWork_', '_StopWork_', '_StartDinner_', '_StopDinner_', '_WorkGrID_', '_NotWorkTime_', '_IDComp_', '_DeltaStartDinner_', '_DeltaStopDinner_', '_Night_Work_', '_TN_', '_DataDay_')
SQL_C1C_UPD_timework=UPDATE c1c SET worktime = "WorkTimeNotDinner" from "Real_Graph" where (c1c."TN" = "Real_Graph"."TN") AND (c1c."Date" = "Real_Graph"."DataDay")
C1C_UPD_CLOCK_IF_ALARM=UPDATE c1c SET "Clock" = round(worktime/3600.,3) where c1c."TypDayCod"='_TDALARM_' and c1c."Date" != current_date
C1C_SET_ALARM_IF_NOT_EXIT = UPDATE c1c SET "TypDayCod" = '_TDALARM_' FROM "Real_Graph"  where (c1c."TN" = "Real_Graph"."TN") AND (c1c."Date" = "Real_Graph"."DataDay") and "Real_Graph".night_work>0 and c1c."TypDayCod" NOT IN _TD_ and "Real_Graph"."DataDay" != current_date

SQL_INS_SLAVE=INSERT INTO real_graph_slave (real_graph, timeval, zone) VALUES (?,?,?)
SQL_UPD_SLAVE=UPDATE real_graph_slave SET timeval=?, zone=? where real_graph = ?

#---------------Запросы для отчетов по использованию рабочего времени
SQL_FULL_FOR_TN=SELECT t2."Name", t3."Name", t3."FirstName", t3."MidName", t1."WorkTime", t1."DeltaStartWork", t7."Name" as grafic, t1."TimeVhod",  Extract0(YEAR from "TimeVhod" ) AS God,  Extract(MONTH from "TimeVhod" ) AS Mes, Extract(DAY from "TimeVhod" ) AS Day, t1."DeltaStopWork", t1."IDDivision", t1."NotWorkTime", (extract(epoch from age("StartDinner","StartWork")) +  extract(epoch from age("StopWork","StopDinner")))/ 60 AS Fond_WorkTime, t1."StartWork", t1."StopWork", t1."StartDinner", t1."StopDinner", t1."IDComp", t3."ID", t3."TabNumber", t1."DeltaStartDinner", t1."DeltaStopDinner", t5."Name", t8."name" as typday, t6."Clock", t6."Date" as DataDay, t1."ID" FROM ((((c1c as t6 LEFT JOIN "Real_Graph" as t1 ON (t6."Date"= t1."DataDay") AND (t6."TN" = t1."TN")) INNER JOIN tworktime as t8 ON t6."TypDayCod" = t8.codchar)  LEFT JOIN "GTime" as t7 ON t1."WorkGrID" = t7."ID") INNER JOIN ("pList" as t3 LEFT JOIN "PPost" as t5 ON t3."Post" = t5."ID") ON t6."TN" = t3."TabNumber") INNER JOIN "PDivision" t2 ON t3."Section" = t2."ID" WHERE t6."Date" >= '_STARTDAY_' AND t6."Date" <= '_STOPDAY_' AND t6."TN" = '_TN_'  order by t6."CodDep" ASC, t6."TN" ASC, t6."Date" ASC

#--------------Запросы при отправки информации на e-mail
#Кто появился (ушел) на(с) территории
Whose_event=select "Name_1C", "FirstName_1C", "MidName_1C", "DepName_1C", "PostName_1C" from "PERSONNEL" WHERE CAST(idscud as INTEGER) IN (_ID_)
#---------------Получение почтового адреса автора запроса
To=select "email", ev_mail from "PERSONNEL" WHERE idscud = '_IDSCUD_'
#------------Вставить новое задание (за кем следить и какое событие отслеживать)
Add_task=insert INTO  notify (idscud,ev,author, device) VALUES ('_IDSCUD_','_EV_','_AUTH_', _DEV_)
#-------------Вставить автора добавленного задания (кому отправлять сообщение)
Add_author_Task=insert INTO  notify_author (idscud, id_notify) VALUES ('_IDAUTH_',_ID_)
#-----------Получить id записи с извесными idscud i ev
Get_id_notify=Select id from notify where ev='_EV_' and idscud='_IDSCUD_'
#-----------Получить всех авторов заданий
Get_authors=SELECT author  FROM notify GROUP BY author
#-----------Получить все задания автора
#Get_tasks=SELECT notify.idscud, ev FROM notify INNER JOIN notify_author on notify.id=notify_author.id_notify where notify_author.idscud = '_IDSCUD_' ORDER BY ev
#Get_tasks=SELECT notify.idscud, ev FROM notify INNER JOIN notify_author on notify.id=notify_author.id_notify where notify_author.idscud = '_IDSCUD_' AND notify_author.fl_e_mail=false ORDER BY ev
Get_tasks=SELECT notify.idscud, ev FROM notify where author = '_IDSCUD_' and device=2 ORDER BY ev

#Del_tasks=DELETE FROM notify WHERE CAST(idscud as INTEGER) in (_IDSCUD_) and ev='_EV_'
#Del_tasks=UPDATE notify set fl_e_mail=true WHERE CAST(idscud as INTEGER) in (_IDSCUD_) and ev='_EV_'
#Del_tasks=UPDATE notify_author as na  set fl_e_mail=true  FROM notify where (CAST(notify.idscud as INTEGER) in (_IDSCUD_) and ev='_EV_') and notify.id = na.id_notify;
Del_tasks=DELETE FROM notify WHERE CAST(idscud as INTEGER) in (_IDSCUD_) and ev='_EV_' and author='_AUTH_' and device = 2




#====================== О Т Ч Е Т Ы================================

#---------------------Имя файла отчета
NAME_FILE_REP_1=SELECT "TN" || '_' || "Name_1C" || '_' || "DepName_1C" FROM "PERSONNEL" WHERE "TN"='_TN_'
NAME_FILE_REP_2=SELECT name_1c FROM "DEPARTMENTS" WHERE trim(cod_1c)='_DEP_'


#-------------------Для отчета по предприятию: интегрированная информация по календарным графикам
SQL_TYPDAY_FOR_FIRM = SELECT tworktime.name, Sum(c1c."Clock") AS "Sum-Clock", Count(c1c."Date") AS "Count-date" FROM c1c INNER JOIN tworktime ON c1c."TypDayCod" = tworktime.codchar inner join "DEPARTMENTS"  on c1c."CodDep" = "DEPARTMENTS".cod_1c  WHERE (c1c."Date")>='_STARTDAY_' And c1c."Date"<='_STOPDAY_' GROUP BY tworktime.name order by "Count-date" desc

#SQL_ALL_DEP = SELECT cd, dn,  sum(wminutplan) as wp, sum(work_time_fact)/60 as wt, sum(not_work_time_fact)/60 as not_work_time_fact, sum(delta_start)/60 as delta_start, sum(delta_end)/60 as delta_end,  sum(delta_start_din)/60 delta_start_din, sum(delta_stop_din)/60 as delta_stop_din   from(SELECT t1."CodDep" as cd, "PERSONNEL"."DepName_1C" as dn, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."PostName_1C" as post, Extract(MONTH from t1."Date") AS Mes, t1."Date", t2."name", t3."TimeVhod"::TIME as start_work_fact, t3."TimeVihod"::TIME as stop_work_fact, "Clock"*60 AS wminutplan, t3."WorkTime" as work_time_fact, t3."NotWorkTime" as not_work_time_fact, t3."StartWork"::TIME as start_work_plan, t3."DeltaStartWork" as delta_start, t3."StopWork"::TIME as stop_work_plan, t3."DeltaStopWork" as delta_end, t3."StartDinner"::TIME as start_din_plan, t3."DeltaStartDinner" as delta_start_din, t3."StopDinner"::TIME as stop_din_plan, t3."DeltaStopDinner" as delta_stop_din, t3."WorkGrID" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (t1."Date">='_SD_' AND t1."Date"<='_ED_')) as RR GROUP BY cd, dn ORDER BY sum(work_time_fact)-sum(wminutplan)
SQL_ALL_DEP = SELECT cd, dn, sum(wminutplan) as wp, sum(work_time_fact)/60 as wt, sum(not_work_time_fact)/60 as not_work_time_fact, sum(delta_start)/60 as delta_start, sum(delta_end)/60 as delta_end,  sum(delta_start_din)/60 delta_start_din, sum(delta_stop_din)/60 as delta_stop_din   from(SELECT t1."CodDep" as cd, "PERSONNEL"."DepName_1C" as dn, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio,"PERSONNEL"."QuitDay_1C" as qd, "PERSONNEL"."PostName_1C" as post, Extract(MONTH from t1."Date") AS Mes, t1."Date", t2."name", t3."TimeVhod"::TIME as start_work_fact, t3."TimeVihod"::TIME as stop_work_fact, "Clock"*60 AS wminutplan, t3."WorkTimeNotDinner" as work_time_fact, t3."NotWorkTime" as not_work_time_fact, t3."StartWork"::TIME as start_work_plan, t3."DeltaStartWork" as delta_start, t3."StopWork"::TIME as stop_work_plan, t3."DeltaStopWork" as delta_end, t3."StartDinner"::TIME as start_din_plan, t3."DeltaStartDinner" as delta_start_din, t3."StopDinner"::TIME as stop_din_plan, t3."DeltaStopDinner" as delta_stop_din, t3."WorkGrID" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (t1."Date">='_SD_' AND t1."Date"<='_ED_')) as RR WHERE qd = '3000-01-01' GROUP BY cd, dn ORDER BY sum(work_time_fact)/60-sum(wminutplan)

SQL_OPOZDAL=SELECT t1."TN", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "GTime".name as grname, "PERSONNEL"."DepName_1C" as depname , "PERSONNEL"."PostName_1C" as postname ,t2."name", t3."StartWork"::TIME as start_work_plan, t3."TimeVhod"::TIME as start_work_fact,      t3."DeltaStartWork"/60 as delta_start FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" LEFT JOIN "GTime" on t3."WorkGrID" = "GTime".id WHERE t1."Date"='_DATE_' AND t3."TimeVhod" NOTNULL  ORDER BY t3."DeltaStartWork" DESC
SQL_PROGUL=SELECT t1."TN", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."DepName_1C" as depname , "PERSONNEL"."PostName_1C" as postname , t2."name" FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" LEFT JOIN "GTime" on t3."WorkGrID" = "GTime".id WHERE t1."Date"='_DATE_' AND t3."TimeVhod" ISNULL AND "PERSONNEL"."QuitDay_1C">'_DATE_' ORDER BY name DESC, depname
SQL_OPOZDAL_C_OBEDA=SELECT t1."TN", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "GTime".name as grname, "PERSONNEL"."DepName_1C" as depname , "PERSONNEL"."PostName_1C" as postname ,t2."name", t3."StopDinner"::TIME as stop_dinner_plan, t3."DeltaStopDinner"/60 as delta_stop_dinner FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" LEFT JOIN "GTime" on t3."WorkGrID" = "GTime".id WHERE t1."Date"='_DATE_' AND t3."TimeVhod" NOTNULL AND "DeltaStopDinner">0  ORDER BY t3."DeltaStopDinner" DESC
SQL_RANO_NA_OBED=SELECT t1."TN", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "GTime".name as grname, "PERSONNEL"."DepName_1C" as depname , "PERSONNEL"."PostName_1C" as postname ,t2."name", t3."StartDinner"::TIME as start_dinner_plan, t3."DeltaStartDinner"/60 as delta_start_dinner FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" LEFT JOIN "GTime" on t3."WorkGrID" = "GTime".id WHERE t1."Date"='_DATE_' AND t3."TimeVhod"  NOTNULL AND "DeltaStartDinner">0   ORDER BY t3."DeltaStartDinner" DESC
SQL_RANO_USHEL=SELECT t1."TN", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "GTime".name as grname, "PERSONNEL"."DepName_1C" as depname , "PERSONNEL"."PostName_1C" as postname ,t2."name", t3."StopWork"::TIME as stop_work, t3."DeltaStopWork"/60 as delta_stop_work, t3."TimeVihod"::TIME FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" LEFT JOIN "GTime" on t3."WorkGrID" = "GTime".id WHERE t1."Date"='_DATE_' AND t3."TimeVhod"  NOTNULL AND "DeltaStopWork">0   ORDER BY t3."DeltaStopWork" DESC

SQL_DIAPAZON=SELECT "ages"."id", "ages"."name", (select count(*) from "PERSONNEL" WHERE "PERSONNEL"."QuitDay_1C"='3000-01-01' AND (date_part('year',age( "PERSONNEL"."BirthDay_1C"::date))) between "ages"."down" and "ages"."up")as col, (select count(*) FROM "PERSONNEL") as k, ROUND(((select count(*) from "PERSONNEL" WHERE (date_part('year',age( "PERSONNEL"."BirthDay_1C"::date))) between "ages"."down" and "ages"."up"):: NUMERIC *100/(select count(*) FROM "PERSONNEL")), 2 )::text ||' %' as procent FROM "ages"   ORDER BY "name" 
SQL_VOZRAST=SELECT "ages"."id", "PERSONNEL"."TN", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."DepName_1C" as depname , "PERSONNEL"."BirthDay_1C" as birthday, "PERSONNEL"."PostName_1C" as postname, (date_part('year',age( "PERSONNEL"."BirthDay_1C"::date))) as ag, "ages".name AS  diapazon, "ages"."color" FROM "PERSONNEL", "ages" WHERE ((date_part('year',age( "PERSONNEL"."BirthDay_1C"::date)))  BETWEEN "ages"."down" and "ages"."up") AND "PERSONNEL"."QuitDay_1C"='3000-01-01' ORDER BY  "PERSONNEL"."BirthDay_1C" DESC

SQL_CONTRACT=SELECT "contract_color"."id", (select count(*) FROM "PERSONNEL" WHERE "PERSONNEL"."QuitDay_1C"= '3000-01-01') as k, "contract_color"."name","PERSONNEL"."QuitDay_1C", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."PostName_1C" as postname, "PERSONNEL"."DepName_1C"AS depname, TO_CHAR("PERSONNEL"."contract_date", 'dd.mm.yyyy') as contract_date, extract(day from ("PERSONNEL"."contract_date"-now())) AS dni, (select count(*) FROM "PERSONNEL" WHERE "PERSONNEL"."contract_date"!='3000-01-01' and  "PERSONNEL"."QuitDay_1C"= '3000-01-01') AS cl FROM "PERSONNEL","contract_color" WHERE "PERSONNEL"."QuitDay_1C"= '3000-01-01' AND extract(day from ("PERSONNEL"."contract_date"-now())) between "contract_color"."down" and "contract_color"."up" ORDER BY  dni

SQL_CONTRACT_DEP=SELECT TO_CHAR("PERSONNEL"."contract_date", 'dd.mm.yyyy') as contract_date, "PERSONNEL"."DepName_1C" AS depname, "contract_color"."id", (select count(*) FROM "PERSONNEL" WHERE "PERSONNEL"."DepCod_1C" = '_DEP_' and "PERSONNEL"."QuitDay_1C"= '3000-01-01') as k, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio,  "PERSONNEL"."PostName_1C" as postname, "PERSONNEL"."DepName_1C"AS depname,  extract(day from ("PERSONNEL"."contract_date"-now())) AS dni, (select count(*) FROM "PERSONNEL" WHERE "PERSONNEL"."contract_date"!='3000-01-01' AND "PERSONNEL"."DepCod_1C" = '_DEP_' and "PERSONNEL"."QuitDay_1C"= '3000-01-01') as cl FROM "PERSONNEL","contract_color" WHERE "PERSONNEL"."contract_date"!='3000-01-01' AND "PERSONNEL"."QuitDay_1C"= '3000-01-01' AND extract(day from ("PERSONNEL"."contract_date"-now())) between "contract_color"."down" and "contract_color"."up" AND  "PERSONNEL"."DepCod_1C" = '_DEP_' ORDER BY  dni

#-------------------Для отчета по подразделению: интегрированная информация по календарным графикам
SQL_TYPDAY_FOR_DEP=SELECT "DEPARTMENTS".name_1c as depname1c, tworktime.name, Sum(c1c."Clock") AS "Sum-Clock", Count(c1c."Date") AS "Count-date" FROM c1c INNER JOIN tworktime ON c1c."TypDayCod" = tworktime.codchar inner join "DEPARTMENTS"  on c1c."CodDep" = "DEPARTMENTS".cod_1c  WHERE (((c1c."CodDep") = '_DEP_') AND ((c1c."Date")>='_STARTDAY_' And (c1c."Date")<='_STOPDAY_')) GROUP BY "DEPARTMENTS".name_1c, tworktime.name
OPOZDAL=SELECT "PERSONNEL"."DepCod_1C", "PostName_1C", "PERSONNEL"."TN", "Name_1C"||' ' || "FirstName_1C" ||' ' || "MidName_1C" as fio, "DeltaStartWork"/60 as "DeltaStartWork", "TimeVhod" from "Real_Graph" INNER JOIN "PERSONNEL" ON "Real_Graph"."TN"="PERSONNEL"."TN" WHERE TRIM("PERSONNEL"."DepCod_1C") = '_DEP_' AND "DataDay" = '_DAY_'ORDER BY "DeltaStartWork"
#-----------------Для отчета по сотруднику за период. Полная информация.
PERS_IN_COMAND=SELECT mes, yyyy, mm, count(wminutplan) as days  , sum(wminutplan) as wp, sum(wt)/60 as wt from(select t1."CodDep" as cd, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, to_char(t1."Date",'mm.YYYY') AS mes, extract(MONTH FROM t1."Date") as mm, extract(YEAR FROM t1."Date") as yyyy, "Clock"*60 AS wminutplan, t3."WorkTime" as wt, t3."NotWorkTime" as nwt, t3."DeltaStartWork" as dstart, t3."DeltaStopWork" as dstop,  t3."DeltaStartDinner" as dstartdin, t3."DeltaStopDinner" as dstopdin FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (((t1."TN")='_TN_')) AND t1."Date">='_SD_' AND t1."Date"<='_ED_' AND "TypDayCod" = '6') as RR GROUP BY (mes,yyyy,mm) ORDER BY  yyyy, mm
PERS_IN_COMAND_ITOG=SELECT tn, count(wminutplan) as days  , sum(wminutplan) as wp, sum(wt)/60 as wt from(select t1."CodDep" as cd, t1."TN" as tn, "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, to_char(t1."Date",'mm.YYYY') AS mes, extract(MONTH FROM t1."Date") as mm, extract(YEAR FROM t1."Date") as yyyy, "Clock"*60 AS wminutplan, t3."WorkTime" as wt, t3."NotWorkTime" as nwt, t3."DeltaStartWork" as dstart, t3."DeltaStopWork" as dstop,  t3."DeltaStartDinner" as dstartdin, t3."DeltaStopDinner" as dstopdin FROM ((c1c as t1 INNER JOIN tworktime as t2 ON t1."TypDayCod" = t2.codchar) LEFT JOIN "Real_Graph" as t3 ON (t1."TN" = t3."TN") AND (t1."Date" = t3."DataDay")) INNER JOIN "PERSONNEL" ON t1."TN" = "PERSONNEL"."TN" WHERE (((t1."TN")='_TN_')) AND t1."Date">='_SD_' AND t1."Date"<='_ED_' AND "TypDayCod" = '6') as RR GROUP BY (tn) 

#------------Интегрированный фактический календарь для сотрудника по периоду
CALENDAR_PERS=SELECT "PERSONNEL"."Name_1C" , "PERSONNEL"."FirstName_1C" ,"PERSONNEL"."MidName_1C" , tworktime.name, Sum(c1c."Clock") AS "Sum-Clock", Count(c1c."Date") AS "Count-date" FROM c1c INNER JOIN tworktime ON c1c."TypDayCod" = tworktime.codchar inner join "PERSONNEL"  on c1c."TN" = "PERSONNEL"."TN"  WHERE (((c1c."TN") = '_TN_') AND ((c1c."Date")>='_SD_' And (c1c."Date")<'_ED_')) GROUP BY "PERSONNEL"."Name_1C", "PERSONNEL"."FirstName_1C","PERSONNEL"."MidName_1C", tworktime.name

#---------------------Для отчета по дням рождения
SQL_DR=SELECT "PERSONNEL"."DepName_1C", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' ||  "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."BirthDay_1C" , age((to_date(EXTRACT(YEAR from TIMESTAMP '_SD_')|| '-'|| EXTRACT(MONTH from "PERSONNEL"."BirthDay_1C") || '-'||  EXTRACT(DAY from "PERSONNEL"."BirthDay_1C"), 'YYYY-MM-dd'))  ,"PERSONNEL"."BirthDay_1C")  ages   FROM "PERSONNEL" WHERE to_date(EXTRACT(YEAR from TIMESTAMP '_SD_')|| '-'|| EXTRACT(MONTH from "PERSONNEL"."BirthDay_1C") || '-'||  EXTRACT(DAY from "PERSONNEL"."BirthDay_1C"), 'YYYY-MM-dd') >= '_SD_' and to_date(EXTRACT(YEAR from TIMESTAMP '_ED_')|| '-'|| EXTRACT(MONTH from "PERSONNEL"."BirthDay_1C") || '-'||  EXTRACT(DAY from "PERSONNEL"."BirthDay_1C"), 'YYYY-MM-dd') <= '_ED_' ORDER BY to_date(EXTRACT(YEAR from TIMESTAMP '_ED_')|| '-'|| EXTRACT(MONTH from "PERSONNEL"."BirthDay_1C") || '-'||  EXTRACT(DAY from "PERSONNEL"."BirthDay_1C"), 'YYYY-MM-dd'),"PERSONNEL"."DepName_1C","PERSONNEL"."Name_1C" 

#--------------------Для служебного отчета: Работающие сотрудники в 1С, табельных номеров которых нет в 1С
SQL_PERS_1C_NOT_SCUD=SELECT "PERSONNEL"."TN", "PERSONNEL"."_Code", "pList"."TabNumber", "PERSONNEL"."Name_1C" || ' ' || "PERSONNEL"."FirstName_1C"|| ' ' || "PERSONNEL"."MidName_1C" as fio, "PERSONNEL"."DepName_1C" as dep, "PERSONNEL"."PostName_1C" as pers FROM "PERSONNEL" LEFT JOIN "pList" ON "PERSONNEL"."TN" = "pList"."TabNumber" WHERE ((("PERSONNEL"."QuitDay_1C")='3000-01-01') AND (("pList"."TabNumber") Is Null)) ORDER BY "Name_1C"


#PERS_DATA=SELECT * FROM "PERSONNEL" WHERE "TN"='_TN_' AND "QuitDay_1C"='3000-01-01'
PERS_DATA=SELECT *, TO_CHAR("PERSONNEL"."contract_date", 'dd.mm.yyyy') as contract_d, TO_CHAR("PERSONNEL"."BirthDay_1C" , 'dd.mm.yyyy') as BirthDay, TO_CHAR("PERSONNEL"."di" , 'dd.mm.yyyy') as Day_priema  FROM "PERSONNEL" WHERE "TN"='_TN_' AND "QuitDay_1C"='3000-01-01'
#-------------Среднее рабочее время за день типа явка
sql_sredn=SELECT sum("Real_Graph"."WorkTimeNotDinner")/60 as fact, Count(*) FROM  ((c1c INNER JOIN "tworktime" ON c1c."TypDayCod" = "tworktime".codchar inner join "PERSONNEL"  on  c1c."TN" = "PERSONNEL"."TN") LEFT JOIN "Real_Graph"  ON (c1c."TN" = "Real_Graph"."TN") AND (c1c."Date" = "Real_Graph"."DataDay")) WHERE "TypDayCod"='1' AND (((c1c."TN")='_TN_')) AND c1c."Date">='_SD_' AND c1c."Date"<='_ED_' ;
sql_sredn_dep=SELECT sum("Real_Graph"."WorkTimeNotDinner")/60 as fact, Count(*) FROM  ((c1c INNER JOIN "tworktime" ON c1c."TypDayCod" = "tworktime".codchar inner join "PERSONNEL"  on  c1c."TN" = "PERSONNEL"."TN") LEFT JOIN "Real_Graph"  ON (c1c."TN" = "Real_Graph"."TN") AND (c1c."Date" = "Real_Graph"."DataDay")) WHERE (c1c."CodDep" = '_DEP_' AND c1c."Date">='_SD_' AND c1c."Date"<='_ED_' AND "TypDayCod"='1');
sql_sredn_full=SELECT sum("Real_Graph"."WorkTimeNotDinner")/60 as fact, Count(*) FROM  ((c1c INNER JOIN "tworktime" ON c1c."TypDayCod" = "tworktime".codchar inner join "PERSONNEL"  on  c1c."TN" = "PERSONNEL"."TN") LEFT JOIN "Real_Graph"  ON (c1c."TN" = "Real_Graph"."TN") AND (c1c."Date" = "Real_Graph"."DataDay")) WHERE "TypDayCod"='1' AND c1c."Date">='_SD_' AND c1c."Date"<='_ED_';


#-----------------------Блокировка пропусков

SQL_BLOCK_PROP=select idpersscud, block, "QuitDay_1C" from c1c INNER JOIN tworktime ON "TypDayCod"=codchar INNER JOIN "PERSONNEL" ON c1c."TN"="PERSONNEL"."TN" WHERE _forpers_ to_char(NOW(), 'yyyy-MM-dd')=to_char("Date",'yyyy-MM-dd') 
SQL_UPD_FINISH_PROP=UPDATE pMark set Finish = '_DBlock_' WHERE Owner='_ID_'

#-----------------Изменение типа дня вручную
IN_C1CHANDMADE=INSERT into c1c_handmaid (c1c,autor,dism,old,new) VALUES (_c1c_,_autor_,'_dism_',_old_,_new_)
UPDATE_DAYS=UPDATE public.c1c SET "TypDayCod"= ?  ,"Clock"= ?, "TypDayCod1C" = ?, ahm=?, dhm=?, rep_hm=?, handmade=true,  comment = ? WHERE "ID" in( _iddays_ )
GET_TD1C=SELECT id1c from tworktime WHERE codchar=?
GET_FIO=SELECT "Name" || ' '|| substring("FirstName" for 1) ||'. ' || substring("MidName" for 1) || '.' AS fio from "pList" WHERE "ID" = ?
GET_DATE=SELECT "Date" FROM c1c WHERE "ID"=_ID_

REQUET_TO_1C=<?xml version="1.0" encoding="UTF-8"?>\
<dataroot xmlns:od="urn:schemas-microsoft-com:officedata" generated="2018-04-18T14:36:13">\
<ReqURV1C>\
<ID>1</ID>\
<SDATE>_SD_</SDATE>\
<EDATE>_ED_</EDATE>\
<ISALL>_ISALL_</ISALL>\
<PATHPARAM>e:\\win1\\obmen</PATHPARAM>\
<PATHRESULT>e:\\win1\\obmen</PATHRESULT>\
<DATEUPLOAD>_DUPLOAD_</DATEUPLOAD>\
</ReqURV1C>\
</dataroot>


report_access=All
SchedulerTime=0 0 2 * * ?
#SchedulerTime=0 51 10 * * ?
SchedulerTime1=0 0/1 * * * ?
SchedulerTimeNotify=0 0/3 * * * ?

SchedulerTimeLoadFromXML=0/10 * * * * ?
REP_PATH_XLS=E:\\WIN1\\obmen\\ReqURV1C_Answer.xml
RQST_PATH_XLS=E:\\WIN1\\obmen\\ReqURV1C.xml
#REP_PATH_XLS=\\\\1csrv2\\urv_1c\\ReqURV1C_Answer.xml
#RQST_PATH_XLS=\\\\1csrv2\\urv_1c\\ReqURV1C.xml
1C_metod=mssql
#1C_metod=xml
Path_db_modify=c:\\dbmod\\
PropBlock=true
working=3000-01-01
td_night_work=('2','41','5')
td_alarm=45

